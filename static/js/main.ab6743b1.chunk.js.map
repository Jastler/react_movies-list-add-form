{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validateUrl","url","test","NewMovie","state","isImgUrl","isImdbUrl","handleChange","event","target","name","value","setState","toUpperCase","slice","handleSumbit","addMovie","props","preventDefault","this","onSubmit","type","placeholder","required","onChange","classNames","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab6743b1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nfunction validateUrl(url) {\n  return (\n    // eslint-disable-next-line max-len\n    /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/.test(url)\n  );\n}\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isImgUrl: false,\n    isImdbUrl: false,\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'imgUrl' || name === 'imdbUrl') {\n      const validate = validateUrl(value);\n\n      if (!validate) {\n        this.setState({\n          [`is${name[0].toUpperCase() + name.slice(1)}`]: true,\n          [name]: value,\n        });\n      } else {\n        this.setState({\n          [`is${name[0].toUpperCase() + name.slice(1)}`]: false,\n          [name]: value,\n        });\n      }\n    } else {\n      this.setState({\n        [name]: value,\n      });\n    }\n  }\n\n  handleSumbit = (event) => {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const { addMovie } = this.props;\n\n    event.preventDefault();\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      isImgUrl,\n      isImdbUrl,\n    } = this.state;\n\n    return (\n      <form\n        onSubmit={this.handleSumbit}\n        className=\"form\"\n      >\n        <h4 className=\"title\">\n          Add film\n        </h4>\n        <input\n          type=\"text\"\n          name=\"title\"\n          className=\"input\"\n          value={title}\n          placeholder=\"Title\"\n          required\n          onChange={this.handleChange}\n        />\n        <textarea\n          name=\"description\"\n          className=\"textarea\"\n          value={description}\n          placeholder=\"Description\"\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          className={classNames(\n            'input',\n            { 'is-danger': isImgUrl },\n          )}\n          name=\"imgUrl\"\n          value={imgUrl}\n          placeholder=\"imgUrl\"\n          required\n          onChange={this.handleChange}\n        />\n        {isImgUrl && (\n          <p className=\"help is-danger\">\n            Invalid url\n          </p>\n        )}\n        <input\n          type=\"text\"\n          className={classNames(\n            'input',\n            { 'is-danger': isImdbUrl },\n          )}\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          placeholder=\"imdbUrl\"\n          required\n          onChange={this.handleChange}\n        />\n        {isImdbUrl && (\n          <p className=\"help is-danger\">\n            Invalid url\n          </p>\n        )}\n        <input\n          type=\"text\"\n          className=\"input\"\n          name=\"imdbId\"\n          value={imdbId}\n          placeholder=\"imdbId\"\n          required\n          onChange={this.handleChange}\n        />\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n        >\n          Add new film\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}